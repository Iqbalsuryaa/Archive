Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.9/dist-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.9/dist-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.9/dist-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.9/dist-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.9/dist-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.9/dist-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
def parenthesis(expression):
    stack = []
    for char in expression:
        if char in ['(', '{', '[']:
            stack.append(char)
        elif char in [')', '}', ']']:
            if not stack:
                return False, "Jumlah kurung tutup lebih banyak"
            current_char = stack.pop()
            if current_char == '(' and char != ')':
                return False, "Kurung buka dan kurung tutup tidak cocok"
            if current_char == '{' and char != '}':
                return False, "Kurung buka dan kurung tutup tidak cocok"
            if current_char == '[' and char != ']':
                return False, "Kurung buka dan kurung tutup tidak cocok"
    if stack:
        return False, "Jumlah kurung buka lebih banyak"
    return True, "Kurung sudah benar"


def infix_to_postfix(expression):
    precedence = {'+': 1, '-': 1, '*': 2, '/': 2, '^': 3, '(': 0, ')': 0, '{': 0, '}': 0, '[': 0, ']': 0}
    stack = []
    postfix = ''
    for char in expression:
        if char.isalnum():
            postfix += char
        elif char == '(' or char == '{' or char == '[':
            stack.append(char)
        elif char == ')' or char == '}' or char == ']':
            while stack and stack[-1] not in ['(', '{', '[']:
                postfix += stack.pop()
            stack.pop()
        else:
            while stack and stack[-1] not in ['(', '{', '['] and precedence[char] <= precedence.get(stack[-1], 0):
                postfix += stack.pop()
            stack.append(char)
    while stack:
        postfix += stack.pop()
    print("Postfix expression:", postfix)
    print("infix expression:", expression)
    return postfix




def evaluasi_postfix(expression):
    stack = []
    for char in expression:
        if char.isnumeric():
            stack.append(int(char))
        else:
            val1 = stack.pop()
            val2 = stack.pop()
            if char == '+':
                stack.append(val2 + val1)
            elif char == '-':
                stack.append(val2 - val1)
            elif char == '*':
                stack.append(val2 * val1)
            elif char == '/':
                stack.append(val2 / val1)
            elif char == '^':
                stack.append(val2 ** val1)
    return stack.pop()


def menghitung_ekspresi(expression):
    is_valid, message = parenthesis(expression)
    if not is_valid:
        return message
    postfix_expression = infix_to_postfix(expression)
    result = evaluasi_postfix(postfix_expression)
    return result

def main():
    expression = input("Masukkan operasi aritmatika : ")
    result = menghitung_ekspresi(expression)
    

    if isinstance(result, str):
        print(result)
    else:
      print("Hasil operasi aritmatika adalah:", result)
    

if __name__ == "__main__":
    main()
------------------

[0;31m[0m
[0;31mStdinNotImplementedError[0mTraceback (most recent call last)
[0;32m<ipython-input-1-52069f6e5e29>[0m in [0;36m<cell line: 87>[0;34m()[0m
[1;32m     86[0m [0;34m[0m[0m
[1;32m     87[0m [0;32mif[0m [0m__name__[0m [0;34m==[0m [0;34m"__main__"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 88[0;31m     [0mmain[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m<ipython-input-1-52069f6e5e29>[0m in [0;36mmain[0;34m()[0m
[1;32m     75[0m [0;34m[0m[0m
[1;32m     76[0m [0;32mdef[0m [0mmain[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 77[0;31m     [0mexpression[0m [0;34m=[0m [0minput[0m[0;34m([0m[0;34m"Masukkan operasi aritmatika : "[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     78[0m     [0mresult[0m [0;34m=[0m [0mmenghitung_ekspresi[0m[0;34m([0m[0mexpression[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     79[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.9/dist-packages/ipykernel/kernelbase.py[0m in [0;36mraw_input[0;34m(self, prompt)[0m
[1;32m    846[0m         """
[1;32m    847[0m         [0;32mif[0m [0;32mnot[0m [0mself[0m[0;34m.[0m[0m_allow_stdin[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 848[0;31m             raise StdinNotImplementedError(
[0m[1;32m    849[0m                 [0;34m"raw_input was called, but this frontend does not support input requests."[0m[0;34m[0m[0;34m[0m[0m
[1;32m    850[0m             )

[0;31mStdinNotImplementedError[0m: raw_input was called, but this frontend does not support input requests.
StdinNotImplementedError: raw_input was called, but this frontend does not support input requests.

